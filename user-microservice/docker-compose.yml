version: '3.8'
services:
    postgres:
        image: postgres:alpine
        container_name: postgres
        ports: 
            - 6432:5432
        environment: 
            POSTRGRES_USER: postgres
            POSTGRES_PASSWORD: root
            POSTGRES_DB: neutrino_users

    elastic:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
        container_name: elastic
        ulimits:
            memlock:
              soft: -1
              hard: -1
        environment:
            - node.name=elastic
            - discovery.type=single-node
            - cluster.name=es-docker-cluster
            # - cluster.initial_master_nodes=elastic
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        volumes:
            - data01:/usr/share/elasticsearch/data
        ports:
            - 8200:9200

    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        container_name: zookeeper
        environment:
            ZOOKEEPER_CLIENT_PORT: 3181
            ZOOKEEPER_TICK_TIME: 2000
    
    kafka:
        image: confluentinc/cp-kafka:latest
        container_name: kafka
        restart: on-failure
        depends_on:
            - zookeeper
        links:
            - zookeeper
        ports:
            - 8092:9092
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:3181
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:8092
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
    data01:
        driver: local